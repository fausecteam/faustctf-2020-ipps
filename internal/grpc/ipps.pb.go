// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ipps.proto

package grpc

import (
	"context"
	"fmt"
	"github.com/golang/protobuf/proto"
	"github.com/golang/protobuf/ptypes/empty"
	"google.golang.org/grpc"
	"google.golang.org/grpc/codes"
	"google.golang.org/grpc/status"
	"math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LoginRequest struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             []byte   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e433d43e56f7944c, []int{0}
}

func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (m *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(m, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *LoginRequest) GetPassword() []byte {
	if m != nil {
		return m.Password
	}
	return nil
}

type LoginResponse struct {
	AuthToken            string   `protobuf:"bytes,1,opt,name=authToken,proto3" json:"authToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginResponse) Reset()         { *m = LoginResponse{} }
func (m *LoginResponse) String() string { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()    {}
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e433d43e56f7944c, []int{1}
}

func (m *LoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResponse.Unmarshal(m, b)
}
func (m *LoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResponse.Marshal(b, m, deterministic)
}
func (m *LoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResponse.Merge(m, src)
}
func (m *LoginResponse) XXX_Size() int {
	return xxx_messageInfo_LoginResponse.Size(m)
}
func (m *LoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResponse proto.InternalMessageInfo

func (m *LoginResponse) GetAuthToken() string {
	if m != nil {
		return m.AuthToken
	}
	return ""
}

type PublicKey struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PublicKey) Reset()         { *m = PublicKey{} }
func (m *PublicKey) String() string { return proto.CompactTextString(m) }
func (*PublicKey) ProtoMessage()    {}
func (*PublicKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_e433d43e56f7944c, []int{2}
}

func (m *PublicKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublicKey.Unmarshal(m, b)
}
func (m *PublicKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublicKey.Marshal(b, m, deterministic)
}
func (m *PublicKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublicKey.Merge(m, src)
}
func (m *PublicKey) XXX_Size() int {
	return xxx_messageInfo_PublicKey.Size(m)
}
func (m *PublicKey) XXX_DiscardUnknown() {
	xxx_messageInfo_PublicKey.DiscardUnknown(m)
}

var xxx_messageInfo_PublicKey proto.InternalMessageInfo

func (m *PublicKey) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type CreditCard struct {
	Number               string   `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreditCard) Reset()         { *m = CreditCard{} }
func (m *CreditCard) String() string { return proto.CompactTextString(m) }
func (*CreditCard) ProtoMessage()    {}
func (*CreditCard) Descriptor() ([]byte, []int) {
	return fileDescriptor_e433d43e56f7944c, []int{3}
}

func (m *CreditCard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreditCard.Unmarshal(m, b)
}
func (m *CreditCard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreditCard.Marshal(b, m, deterministic)
}
func (m *CreditCard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreditCard.Merge(m, src)
}
func (m *CreditCard) XXX_Size() int {
	return xxx_messageInfo_CreditCard.Size(m)
}
func (m *CreditCard) XXX_DiscardUnknown() {
	xxx_messageInfo_CreditCard.DiscardUnknown(m)
}

var xxx_messageInfo_CreditCard proto.InternalMessageInfo

func (m *CreditCard) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

type CreditCards struct {
	Cards                []*CreditCard `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CreditCards) Reset()         { *m = CreditCards{} }
func (m *CreditCards) String() string { return proto.CompactTextString(m) }
func (*CreditCards) ProtoMessage()    {}
func (*CreditCards) Descriptor() ([]byte, []int) {
	return fileDescriptor_e433d43e56f7944c, []int{4}
}

func (m *CreditCards) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreditCards.Unmarshal(m, b)
}
func (m *CreditCards) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreditCards.Marshal(b, m, deterministic)
}
func (m *CreditCards) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreditCards.Merge(m, src)
}
func (m *CreditCards) XXX_Size() int {
	return xxx_messageInfo_CreditCards.Size(m)
}
func (m *CreditCards) XXX_DiscardUnknown() {
	xxx_messageInfo_CreditCards.DiscardUnknown(m)
}

var xxx_messageInfo_CreditCards proto.InternalMessageInfo

func (m *CreditCards) GetCards() []*CreditCard {
	if m != nil {
		return m.Cards
	}
	return nil
}

type Address struct {
	Street               string   `protobuf:"bytes,1,opt,name=street,proto3" json:"street,omitempty"`
	Zip                  string   `protobuf:"bytes,2,opt,name=zip,proto3" json:"zip,omitempty"`
	City                 string   `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	Country              string   `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	Planet               string   `protobuf:"bytes,5,opt,name=planet,proto3" json:"planet,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_e433d43e56f7944c, []int{5}
}

func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetStreet() string {
	if m != nil {
		return m.Street
	}
	return ""
}

func (m *Address) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

func (m *Address) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Address) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Address) GetPlanet() string {
	if m != nil {
		return m.Planet
	}
	return ""
}

type Addresses struct {
	Addresses            []*Address `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Addresses) Reset()         { *m = Addresses{} }
func (m *Addresses) String() string { return proto.CompactTextString(m) }
func (*Addresses) ProtoMessage()    {}
func (*Addresses) Descriptor() ([]byte, []int) {
	return fileDescriptor_e433d43e56f7944c, []int{6}
}

func (m *Addresses) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Addresses.Unmarshal(m, b)
}
func (m *Addresses) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Addresses.Marshal(b, m, deterministic)
}
func (m *Addresses) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Addresses.Merge(m, src)
}
func (m *Addresses) XXX_Size() int {
	return xxx_messageInfo_Addresses.Size(m)
}
func (m *Addresses) XXX_DiscardUnknown() {
	xxx_messageInfo_Addresses.DiscardUnknown(m)
}

var xxx_messageInfo_Addresses proto.InternalMessageInfo

func (m *Addresses) GetAddresses() []*Address {
	if m != nil {
		return m.Addresses
	}
	return nil
}

func init() {
	proto.RegisterType((*LoginRequest)(nil), "grpc.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "grpc.LoginResponse")
	proto.RegisterType((*PublicKey)(nil), "grpc.PublicKey")
	proto.RegisterType((*CreditCard)(nil), "grpc.CreditCard")
	proto.RegisterType((*CreditCards)(nil), "grpc.CreditCards")
	proto.RegisterType((*Address)(nil), "grpc.Address")
	proto.RegisterType((*Addresses)(nil), "grpc.Addresses")
}

func init() {
	proto.RegisterFile("ipps.proto", fileDescriptor_e433d43e56f7944c)
}

var fileDescriptor_e433d43e56f7944c = []byte{
	// 467 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0x5d, 0x6b, 0xd4, 0x4c,
	0x14, 0xde, 0xed, 0xee, 0xb6, 0x6f, 0x4e, 0x77, 0x5f, 0xeb, 0x08, 0x25, 0x44, 0x85, 0x65, 0x10,
	0x59, 0x90, 0x26, 0x25, 0x52, 0xb4, 0x88, 0x17, 0x6b, 0xd1, 0x22, 0x7a, 0xb1, 0x44, 0xaf, 0xbc,
	0x4b, 0x32, 0x67, 0x63, 0x68, 0x36, 0x19, 0xe7, 0x03, 0x89, 0x7f, 0xd7, 0x3f, 0x22, 0x93, 0xc9,
	0xc7, 0x56, 0xa9, 0xde, 0x84, 0xf3, 0x9c, 0xf3, 0xe4, 0x39, 0x9f, 0x03, 0x90, 0x73, 0x2e, 0x7d,
	0x2e, 0x2a, 0x55, 0x91, 0x69, 0x26, 0x78, 0xea, 0x3d, 0xcc, 0xaa, 0x2a, 0x2b, 0x30, 0x68, 0x7c,
	0x89, 0xde, 0x06, 0xb8, 0xe3, 0xaa, 0xb6, 0x14, 0xfa, 0x0e, 0xe6, 0x1f, 0xab, 0x2c, 0x2f, 0x23,
	0xfc, 0xa6, 0x51, 0x2a, 0xe2, 0xc1, 0x7f, 0x5a, 0xa2, 0x28, 0xe3, 0x1d, 0xba, 0xe3, 0xe5, 0x78,
	0xe5, 0x44, 0x3d, 0x36, 0x31, 0x1e, 0x4b, 0xf9, 0xbd, 0x12, 0xcc, 0x3d, 0x58, 0x8e, 0x57, 0xf3,
	0xa8, 0xc7, 0xf4, 0x0c, 0x16, 0xad, 0x8e, 0xe4, 0x55, 0x29, 0x91, 0x3c, 0x02, 0x27, 0xd6, 0xea,
	0xeb, 0xe7, 0xea, 0x06, 0xcb, 0x56, 0x69, 0x70, 0xd0, 0xc7, 0xe0, 0x6c, 0x74, 0x52, 0xe4, 0xe9,
	0x07, 0xac, 0xc9, 0x09, 0x4c, 0x6e, 0xb0, 0x6e, 0x49, 0xc6, 0xa4, 0x4f, 0x00, 0xae, 0x04, 0xb2,
	0x5c, 0x5d, 0xc5, 0x82, 0x91, 0x53, 0x38, 0x2c, 0xf5, 0x2e, 0x41, 0xd1, 0x52, 0x5a, 0x44, 0x2f,
	0xe0, 0x78, 0x60, 0x49, 0xf2, 0x14, 0x66, 0xa9, 0x31, 0xdc, 0xf1, 0x72, 0xb2, 0x3a, 0x0e, 0x4f,
	0x7c, 0xd3, 0xbd, 0x3f, 0x30, 0x22, 0x1b, 0xa6, 0x35, 0x1c, 0xad, 0x19, 0x13, 0x28, 0xa5, 0x51,
	0x96, 0x4a, 0x20, 0xaa, 0x4e, 0xd9, 0x22, 0x53, 0xd1, 0x8f, 0x9c, 0x37, 0x4d, 0x3a, 0x91, 0x31,
	0x09, 0x81, 0x69, 0x9a, 0xab, 0xda, 0x9d, 0x34, 0xae, 0xc6, 0x26, 0x2e, 0x1c, 0xa5, 0x95, 0x2e,
	0x95, 0xa8, 0xdd, 0x69, 0xe3, 0xee, 0xa0, 0xd1, 0xe5, 0x45, 0x5c, 0xa2, 0x72, 0x67, 0x56, 0xd7,
	0x22, 0xfa, 0x12, 0x9c, 0x36, 0x35, 0x4a, 0xf2, 0x0c, 0x9c, 0xb8, 0x03, 0x6d, 0xcd, 0x0b, 0x5b,
	0x73, 0xcb, 0x89, 0x86, 0x78, 0xf8, 0xf3, 0x00, 0xa6, 0xef, 0x37, 0x9b, 0x4f, 0x24, 0x84, 0x59,
	0x33, 0x68, 0x42, 0x2c, 0x77, 0x7f, 0x7b, 0xde, 0x83, 0x5b, 0x3e, 0xbb, 0x09, 0x3a, 0x22, 0x97,
	0x30, 0xbf, 0x46, 0x35, 0x0c, 0xfc, 0xd4, 0xb7, 0x27, 0xe1, 0x77, 0x27, 0xe1, 0xbf, 0x35, 0x27,
	0xe1, 0xdd, 0xb3, 0xbf, 0xf7, 0x44, 0x3a, 0x22, 0x17, 0x00, 0x6b, 0xc6, 0xba, 0x79, 0xdd, 0xae,
	0xcf, 0xbb, 0x43, 0xa7, 0xcf, 0x38, 0xf4, 0xfa, 0x8f, 0x8c, 0x3d, 0x91, 0x8e, 0xc8, 0x2b, 0x58,
	0xac, 0x19, 0xdb, 0x5b, 0xff, 0x1f, 0x8b, 0xfc, 0x4b, 0xde, 0xd7, 0xf0, 0xff, 0x35, 0xaa, 0xfd,
	0xab, 0xb8, 0x2b, 0xf3, 0xfd, 0xdf, 0x55, 0x25, 0x1d, 0xbd, 0xb9, 0xfc, 0xf2, 0x22, 0xcb, 0x55,
	0x11, 0x27, 0x7e, 0x2a, 0xfd, 0x6d, 0xac, 0x7d, 0x86, 0xc1, 0x36, 0xd6, 0x52, 0xd9, 0x6f, 0xaa,
	0xb6, 0x67, 0xe1, 0x79, 0x78, 0x1e, 0x98, 0x37, 0x16, 0xe4, 0xa5, 0x32, 0x0f, 0xa3, 0x08, 0x8c,
	0x50, 0x72, 0xd8, 0xe8, 0x3f, 0xff, 0x15, 0x00, 0x00, 0xff, 0xff, 0x97, 0xc8, 0x47, 0xb8, 0x80,
	0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// IPPSClient is the client API for IPPS service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IPPSClient interface {
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	GetPublicKey(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*PublicKey, error)
	AddAddress(ctx context.Context, in *Address, opts ...grpc.CallOption) (*empty.Empty, error)
	GetAddresses(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Addresses, error)
	AddCreditCard(ctx context.Context, in *CreditCard, opts ...grpc.CallOption) (*empty.Empty, error)
	GetCreditCards(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*CreditCards, error)
}

type iPPSClient struct {
	cc grpc.ClientConnInterface
}

func NewIPPSClient(cc grpc.ClientConnInterface) IPPSClient {
	return &iPPSClient{cc}
}

func (c *iPPSClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, "/grpc.IPPS/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iPPSClient) GetPublicKey(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*PublicKey, error) {
	out := new(PublicKey)
	err := c.cc.Invoke(ctx, "/grpc.IPPS/GetPublicKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iPPSClient) AddAddress(ctx context.Context, in *Address, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/grpc.IPPS/AddAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iPPSClient) GetAddresses(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Addresses, error) {
	out := new(Addresses)
	err := c.cc.Invoke(ctx, "/grpc.IPPS/GetAddresses", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iPPSClient) AddCreditCard(ctx context.Context, in *CreditCard, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/grpc.IPPS/AddCreditCard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iPPSClient) GetCreditCards(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*CreditCards, error) {
	out := new(CreditCards)
	err := c.cc.Invoke(ctx, "/grpc.IPPS/GetCreditCards", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IPPSServer is the server API for IPPS service.
type IPPSServer interface {
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	GetPublicKey(context.Context, *empty.Empty) (*PublicKey, error)
	AddAddress(context.Context, *Address) (*empty.Empty, error)
	GetAddresses(context.Context, *empty.Empty) (*Addresses, error)
	AddCreditCard(context.Context, *CreditCard) (*empty.Empty, error)
	GetCreditCards(context.Context, *empty.Empty) (*CreditCards, error)
}

// UnimplementedIPPSServer can be embedded to have forward compatible implementations.
type UnimplementedIPPSServer struct {
}

func (*UnimplementedIPPSServer) Login(ctx context.Context, req *LoginRequest) (*LoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedIPPSServer) GetPublicKey(ctx context.Context, req *empty.Empty) (*PublicKey, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPublicKey not implemented")
}
func (*UnimplementedIPPSServer) AddAddress(ctx context.Context, req *Address) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddAddress not implemented")
}
func (*UnimplementedIPPSServer) GetAddresses(ctx context.Context, req *empty.Empty) (*Addresses, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAddresses not implemented")
}
func (*UnimplementedIPPSServer) AddCreditCard(ctx context.Context, req *CreditCard) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddCreditCard not implemented")
}
func (*UnimplementedIPPSServer) GetCreditCards(ctx context.Context, req *empty.Empty) (*CreditCards, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCreditCards not implemented")
}

func RegisterIPPSServer(s *grpc.Server, srv IPPSServer) {
	s.RegisterService(&_IPPS_serviceDesc, srv)
}

func _IPPS_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IPPSServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.IPPS/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IPPSServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IPPS_GetPublicKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IPPSServer).GetPublicKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.IPPS/GetPublicKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IPPSServer).GetPublicKey(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _IPPS_AddAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Address)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IPPSServer).AddAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.IPPS/AddAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IPPSServer).AddAddress(ctx, req.(*Address))
	}
	return interceptor(ctx, in, info, handler)
}

func _IPPS_GetAddresses_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IPPSServer).GetAddresses(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.IPPS/GetAddresses",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IPPSServer).GetAddresses(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _IPPS_AddCreditCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreditCard)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IPPSServer).AddCreditCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.IPPS/AddCreditCard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IPPSServer).AddCreditCard(ctx, req.(*CreditCard))
	}
	return interceptor(ctx, in, info, handler)
}

func _IPPS_GetCreditCards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IPPSServer).GetCreditCards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.IPPS/GetCreditCards",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IPPSServer).GetCreditCards(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _IPPS_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.IPPS",
	HandlerType: (*IPPSServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _IPPS_Login_Handler,
		},
		{
			MethodName: "GetPublicKey",
			Handler:    _IPPS_GetPublicKey_Handler,
		},
		{
			MethodName: "AddAddress",
			Handler:    _IPPS_AddAddress_Handler,
		},
		{
			MethodName: "GetAddresses",
			Handler:    _IPPS_GetAddresses_Handler,
		},
		{
			MethodName: "AddCreditCard",
			Handler:    _IPPS_AddCreditCard_Handler,
		},
		{
			MethodName: "GetCreditCards",
			Handler:    _IPPS_GetCreditCards_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ipps.proto",
}
